/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'igorcadelima' at '6/22/16 7:56 PM' with Gradle 2.14
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14/userguide/tutorial_java_projects.html
 */

configurations {
  ajc
  aspects
}

// Apply the java plugin to add support for Java
apply plugin: 'java'

sourceCompatibility = 1.8
version = '0.1'

jar {
    manifest {
        attributes 'Implementation-Title': 'QuAM Framework',
                   'Implementation-Version': version
    }

	from {
	    configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
	}
}

compileJava {
  doLast{
      ant.taskdef( resource:"org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties", classpath: configurations.ajc.asPath)
      ant.iajc(source:sourceCompatibility, destDir:sourceSets.main.output.classesDir.absolutePath, maxmem:"512m", fork:"true",
          aspectPath:configurations.aspects.asPath,
            sourceRootCopyFilter:"**/.svn/*,**/*.java",classpath:configurations.compile.asPath){
          sourceroots{
              sourceSets.main.java.srcDirs.each{
                  pathelement(location:it.absolutePath)
              }
          }
      }
  }
}

// In this section you declare where to find the dependencies of your project
repositories {
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // Uses Log4j logging API
    compile 'org.apache.logging.log4j:log4j-api:2.3'
    compile 'org.apache.logging.log4j:log4j-core:2.3'

    // Use Jackson to convert code elements to JSON format
    compile 'com.fasterxml.jackson.core:jackson-core:[2.5.0,2.9.+]'
	compile 'com.fasterxml.jackson.core:jackson-databind:[2.5.0,2.9.+]'
    
    // AspectJ    
    ajc             "org.aspectj:aspectjtools:1.+"
    compile         "org.aspectj:aspectjrt:1.+"
}
 
